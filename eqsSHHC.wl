(* ::Package:: *)

makeDSolveStart=Function[{observables},
Block[{
hamkinb=Total[(hSz[#])&/@Range[length+1,2length]],
hamIntAndFEqs=Total[( 
(hEm[#1,#2]+hEm[#1+sites,#2+sites])
(hSpSm[#2,#1]-hSpSm[#2+sites,#1+sites])
+(hEu[#1,#2+sites]-hEu[#1+sites,#2])
(hSmSm[#1,#2+sites]+hSmSm[#1+sites,#2])
+(hEm[#2,#1]+hEm[#2+sites,#1+sites])
(hSpSm[#1,#2]-hSpSm[#1+sites,#2+sites])
+(hEl[#2+sites,#1]-hEl[#2,#1+sites])
(hSpSp[#1,#2+sites]+hSpSp[#1+sites,#2])
)&@@@bonds],
eqnsSm,eqnsSz,initsSm,initsSz,eqnsEm,eqnsEl,initsEm,initsEl,start
},
eqnsSm=Sm[#]'[t]==(intU[t]hamkinb-hopt[t]hamIntAndFEqs)[[1,#,1]]&/@Range[numbos];
eqnsSz=Sz[#]'[t]==(intU[t]hamkinb-hopt[t]hamIntAndFEqs)[[1,#,2]]&/@Range[numbos];
initsSm=Sm[#][0]==0&/@Range[numbos];
initsSz=Sz[#][0]==0&/@Range[numbos];
eqnsEm=Em[#1,#2]'[t]==-hopt[t]hamIntAndFEqs[[2,1,#1,#2]]&@@@midPairs;
eqnsEl=El[#1,#2]'[t]==-hopt[t]hamIntAndFEqs[[2,2,#1,#2]]&@@@lowPairs;
initsEm=Em[#1,#2][0]==0&@@@midPairs;
initsEl=El[#1,#2][0]==0&@@@lowPairs;
start=First@NDSolve`ProcessEquations[Flatten[{eqnsSm,eqnsSz,eqnsEm,eqnsEl,initsSm,initsSz,initsEm,initsEl}],observables,t,Method->{"EquationSimplification"->"Solve"}];
start
]
];
