(* ::Package:: *)

makeDSolveStart=Function[{observables},
Block[{
hamkinb=Total[(hBm[#,#])&/@Range[length+1,2length]],
hamIntAndFEqs=Total[( 
(hEm[#1,#2]+hEm[#1+sites,#2+sites])
(hBm[#2,#1]-hBm[#2+sites,#1+sites])
+(hEu[#1,#2+sites]-hEu[#1+sites,#2])
(hBl[#1,#2+sites]+hBl[#1+sites,#2])
+(hEm[#2,#1]+hEm[#2+sites,#1+sites])
(hBm[#1,#2][t]-hBm[#1+sites,#2+sites])
+(hEl[#2+sites,#1]-hEl[#2,#1+sites])
(hBu[#1,#2+sites]+hBu[#1+sites,#2])
)&@@@Table[{n,Mod[n+1,length,1]},{n,length}]],
eqnsBm,eqnsBl,initsBm,initsBl,eqnsEm,eqnsEl,initsEm,initsEl,start
},
eqnsBm=Table[Table[Bm[ii,jj]'[t]==(intU[t]hamkinb-hopt[t]hamIntAndFEqs)[[1,1,ii,jj]],{jj,ii,numferm}],{ii,numferm}];
eqnsBl=Table[Table[Bl[ii,jj]'[t]==(intU[t]hamkinb-hopt[t]hamIntAndFEqs)[[1,2,ii,jj]],{jj,ii+1,numferm}],{ii,numferm-1}];
initsBm=Table[Table[Bm[ii,jj][0]==0,{jj,ii,numferm}],{ii,numferm}];
initsBl=Table[Table[Bl[ii,jj][0]==0,{jj,ii+1,numferm}],{ii,numferm-1}];
eqnsEm=Table[Table[Em[ii,jj]'[t]==-hopt[t]hamIntAndFEqs[[2,1,ii,jj]],{jj,ii,numferm}],{ii,numferm}];
eqnsEl=Table[Table[El[ii,jj]'[t]==-hopt[t]hamIntAndFEqs[[2,2,ii,jj]],{jj,ii+1,numferm}],{ii,numferm-1}];
initsEm=Table[Table[Em[ii,jj][0]==0,{jj,ii,numferm}],{ii,numferm}];
initsEl=Table[Table[El[ii,jj][0]==0,{jj,ii+1,numferm}],{ii,numferm-1}];
start=First@NDSolve`ProcessEquations[Flatten[{eqnsBm,eqnsBl,eqnsEm,eqnsEl,initsBm,initsBl,initsEm,initsEl}],observables,t,Method->{"EquationSimplification"->"Solve"}];
start
]
];
